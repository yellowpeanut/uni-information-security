# Form implementation generated from reading ui file 'encrypt.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import re
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QGridLayout, QTableWidget, QTableWidgetItem
from qt_material import apply_stylesheet
import codecs
import random
import os
from GOSTCoder import GOSTCoder


class Ui_MainWindow(object):
    CHUNKSIZE = "32"
    PUBLIC_KEY = ["271", "6"]
    PRIVATE_KEY = "202"
    KEYPATH = os.path.dirname(__file__) + "/key.txt"

    def setupUi(self, MainWindow):
        import os
        MainWindow.setObjectName("Rakocrab Software")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.lbInitial = QtWidgets.QLabel(parent=self.centralwidget)
        self.lbInitial.setGeometry(QtCore.QRect(10, 10, 91, 16))
        self.lbInitial.setObjectName("lbInitial")

        self.teInitial = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.teInitial.setGeometry(QtCore.QRect(10, 30, 501, 251))
        self.teInitial.setObjectName("teInitial")
        # self.teInitial.setReadOnly(True)

        self.lbEncrypted = QtWidgets.QLabel(parent=self.centralwidget)
        self.lbEncrypted.setGeometry(QtCore.QRect(10, 290, 161, 16))
        self.lbEncrypted.setObjectName("lbEncrypted")

        self.teEncrypted = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.teEncrypted.setGeometry(QtCore.QRect(10, 310, 501, 251))
        self.teEncrypted.setObjectName("teEncrypted")
        self.teEncrypted.setReadOnly(True)

        # self.imgTab = QtGui.QPixmap(os.path.dirname(__file__) + "/table.png")

        # self.imgTable = QtWidgets.QGraphicsView(parent=self.centralwidget)
        # self.imgTable.setGeometry(QtCore.QRect(530, 30, 251, 251))
        # self.imgTable.setObjectName("imgTable")

        # self.lbTable = QtWidgets.QLabel(parent=self.centralwidget)
        # self.lbTable.setGeometry(QtCore.QRect(530, 10, 101, 16))
        # self.lbTable.setObjectName("lbTable")
        # self.lbTable.setPixmap(self.imgTab)

        self.btnOpen = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnOpen.setGeometry(QtCore.QRect(530, 420, 251, 41))
        self.btnOpen.setObjectName("btnOpen")
        self.btnOpen.clicked.connect(self.openFile)

        self.btnEncrypt = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnEncrypt.setGeometry(QtCore.QRect(530, 470, 251, 41))
        self.btnEncrypt.setObjectName("btnEncrypt")
        self.btnEncrypt.clicked.connect(self.encrypt)

        self.btnDecrypt = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnDecrypt.setGeometry(QtCore.QRect(530, 520, 141, 41))
        self.btnDecrypt.setObjectName("btnEncrypt")
        self.btnDecrypt.clicked.connect(self.decrypt)

        self.btnExit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(680, 520, 101, 41))
        self.btnExit.setObjectName("btnExit")
        self.btnExit.clicked.connect(self.exit)

        self.lbChunkSize = QtWidgets.QLabel(parent=self.centralwidget)
        self.lbChunkSize.setGeometry(QtCore.QRect(530, 10, 241, 16))
        self.lbChunkSize.setObjectName("lbChunkSize")

        self.leChunkSize = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.leChunkSize.setGeometry(QtCore.QRect(530, 30, 251, 21))
        self.leChunkSize.setObjectName("leChunkSize")
        with codecs.open(self.KEYPATH, 'r', "utf-8") as file:
            keytext = (file.read()).strip()
            file.close()
        self.leChunkSize.setText(keytext)

        self.lbPubK0 = QtWidgets.QLabel(parent=self.centralwidget)
        self.lbPubK0.setGeometry(QtCore.QRect(530, 60, 241, 64))
        self.lbPubK0.setObjectName("lbPubK0")

        self.btnOpenKey = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnOpenKey.setGeometry(QtCore.QRect(530, 240, 251, 41))
        self.btnOpenKey.setObjectName("btnOpenKey")
        self.btnOpenKey.clicked.connect(self.openFileKey)

        # self.lePubK0 = QtWidgets.QLineEdit(parent=self.centralwidget)
        # self.lePubK0.setGeometry(QtCore.QRect(530, 80, 251, 21))
        # self.lePubK0.setObjectName("lePubK0")
        # self.lePubK0.setText(self.PUBLIC_KEY[0])

        # self.lbPubK1 = QtWidgets.QLabel(parent=self.centralwidget)
        # self.lbPubK1.setGeometry(QtCore.QRect(530, 110, 241, 16))
        # self.lbPubK1.setObjectName("lbPubK1")

        # self.lePubK1 = QtWidgets.QLineEdit(parent=self.centralwidget)
        # self.lePubK1.setGeometry(QtCore.QRect(530, 130, 251, 21))
        # self.lePubK1.setObjectName("lePubK1")
        # self.lePubK1.setText(self.PUBLIC_KEY[1])

        # self.lbPrivK = QtWidgets.QLabel(parent=self.centralwidget)
        # self.lbPrivK.setGeometry(QtCore.QRect(530, 310, 241, 16))
        # self.lbPrivK.setObjectName("lbPrivK1")

        # self.lePrivK = QtWidgets.QLineEdit(parent=self.centralwidget)
        # self.lePrivK.setGeometry(QtCore.QRect(530, 330, 251, 21))
        # self.lePrivK.setObjectName("lePrivK1")
        # self.lePrivK.setText(self.PRIVATE_KEY)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        import os
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Rakocrab Software"))
        MainWindow.setWindowIcon(QtGui.QIcon(os.path.dirname(__file__) + "/rakocrab.png"))
        self.lbInitial.setText(_translate("MainWindow", "Текст файла"))
        self.lbEncrypted.setText(_translate("MainWindow", "Получившийся текст"))
        # self.lbTable.setText(_translate("MainWindow", "Таблица замен"))
        self.btnOpen.setText(_translate("MainWindow", "Открыть файл"))
        self.btnEncrypt.setText(_translate("MainWindow", "Зашифровать"))
        self.btnDecrypt.setText(_translate("MainWindow", "Расшифровать"))
        self.btnExit.setText(_translate("MainWindow", "Выход"))
        self.lbChunkSize.setText(_translate("MainWindow", "Ключ шифрования"))
        self.lbPubK0.setText(_translate("MainWindow", "Для генерации нового ключа,\nудалите содержимое файла \n'key.txt'"))
        self.btnOpenKey.setText(_translate("MainWindow", "Открыть файл с ключом"))
        # self.lbPubK1.setText(_translate("MainWindow", "Публичный ключ: g"))
        # self.lbPrivK.setText(_translate("MainWindow", "Приватный ключ: x"))

    def openFile(self):
        filename, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Open File", "", "All Files(*);;Text Files(*.txt)")
        if filename:
            with codecs.open(filename, 'r', "utf-8") as file:
                text = file.read()
                file.close()
                self.teInitial.setText(text)

    def openFileKey(self):
        filename, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Open File", "", "All Files(*);;Text Files(*.txt)")
        if filename:
            with codecs.open(filename, 'r', "utf-8") as file:
                text = file.read()
                file.close()
                self.teInitial.setText(text)
            if len(text.strip()) == 256:
                if bool(re.fullmatch('[01]+', text.strip())):
                    with codecs.open(self.KEYPATH, 'w', "utf-8") as file:
                        file.write(text.strip())
                        file.close()
                    self.leChunkSize.setText(text.strip())

    def encrypt(self):
        import os
        coder = GOSTCoder()
        message = self.teInitial.toPlainText().strip()
        decryptedText = coder.encrypt(message)

        with codecs.open(os.path.dirname(__file__) + "/encrypted.txt", 'w', "utf-8") as file:
            file.write(decryptedText)
            self.teEncrypted.setText(decryptedText)

    def decrypt(self):
        import os
        coder = GOSTCoder()
        message = self.teInitial.toPlainText().strip()
        decryptedText = coder.decrypt(message)

        with codecs.open(os.path.dirname(__file__) + "/decrypted.txt", 'w', "utf-8") as file:
            file.write(decryptedText)
            self.teEncrypted.setText(decryptedText)

    def exit(self):
        MainWindow.close()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    apply_stylesheet(app, theme='dark_blue.xml')
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
